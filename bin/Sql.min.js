function sum(t=[]){return t.reduce((t,r)=>t+=r)}function inRange(t=0,r,e=1,s){e=Number(e);let a=t,l=[];for((e>=r||0==e)&&(e=1);a<r;)"function"==typeof s&&s(a),l.push(a),a+=e;return l}const inventory=[{name:"asparagus",type:"vegetables",quantity:5},{name:"bananas",type:"fruit",quantity:0},{name:"goat",type:"meat",quantity:23},{name:"cherries",type:"fruit",quantity:5},{name:"fish",type:"meat",quantity:22},{name:"carrots",type:"vegetables",quantity:10},{name:"apples",type:"fruit",quantity:15},{name:"chicken",type:"meat",quantity:18},{name:"broccoli",type:"vegetables",quantity:8},{name:"potatoes",type:"vegetables",quantity:12},{name:"grapes",type:"fruit",quantity:30},{name:"beef",type:"meat",quantity:25},{name:"spinach",type:"vegetables",quantity:7}];class Sql{constructor(t=[]){this.rawData=t,this._length=t.length,this.resultArray=t}updateLength(){}select(...t){return t=t||[],t.flat(),0===t.length?this:(this.resultArray=this.resultArray.map((r,e)=>{let s={};return t.forEach(t=>{r.hasOwnProperty(t)&&(s[t]||(s[t]=r[t]))}),s}),this)}where(t){return this.resultArray=this.resultArray.filter(r=>t(r)||0===t(r)),this}orderBy(t,r){let e={ASC:(r,e)=>r[t]-e[t],DESC:(r,e)=>e[t]-r[t]},s={ASC:(r,e)=>r[t].localeCompare(e[t]),DESC:(r,e)=>e[t].localeCompare(r[t])};"number"==typeof this.resultArray[0][t]&&("ASC"===r&&this.resultArray.sort(e.ASC),"DESC"===r&&this.resultArray.sort(e.DESC)),"string"==typeof this.resultArray[0][t]&&("ASC"===r&&this.resultArray.sort(s.ASC),"DESC"===r&&this.resultArray.sort(s.DESC))}groupBy(t){let r=[],e={};return this.resultArray.map((r,s)=>{let a=t(r),l=a;if(!a)return e.error=`No attribute name ${e[l]} at groupBy `,-1;e[l]||(e[l]=[]),e[l]=[...e[l],r]}),r.push(e),this.resultArray=r,this}limit(t){this.resultArray=this.resultArray.slice(0,t)}between(t,r){this.resultArray=this.resultArray.slice(t,r)}top(t){this.resultArray=this.resultArray.slice(0,t)}last(t){this.resultArray=this.resultArray.slice(this.resultArray.length-t,this.resultArray.length)}count(){if(!(this.resultArray instanceof Array))return this.resultArray;let t=0;return this.resultArray.forEach(()=>t+=1),this.resultArray=t,t}sum(t){if(!(this.resultArray instanceof Array))return this.resultArray;let r=[];if(1==this.resultArray.length){let e=0;return Object.keys(sql_test.resultArray[0]).map(s=>{let a={};e=this.resultArray[0][s].reduce((r,e)=>r+Number(e[t]),0),a[s]=e,r.push(a)}),this.resultArray=r,r}let e=0;e=this.resultArray.reduce((r,e)=>r+Number(e[t]),0);let s={};return s["sum_"+t]=e,this.resultArray=s,e}max(t){if(!(this.resultArray instanceof Array))return this.resultArray;let r=[];if(1==this.resultArray.length)return Object.keys(this.resultArray[0]).map(e=>{let s=this.resultArray[0][e][0][t],a={};this.resultArray[0][e].map(r=>{s<=r[t]&&(s=r[t],a[e]=s)}),r.push(a)}),this.resultArray=r,r;let e=+this.resultArray[0][t];this.resultArray.forEach(r=>{e<+r[t]&&(e=r[t])});let s={};return s["max_"+t]=e,this.resultArray=s,e}min(t){if(!(this.resultArray instanceof Array))return this.resultArray;let r=[];if(1==this.resultArray.length)return Object.keys(this.resultArray[0]).map(e=>{let s=this.resultArray[0][e][0][t],a={};this.resultArray[0][e].map(r=>{s>=r[t]&&(s=r[t],a[e]=s)}),r.push(a)}),this.resultArray=r,r;let e=+this.resultArray[0][t];this.resultArray.forEach(r=>{e>=+r[t]&&(e=r[t])});let s={};return s["min_"+t]=e,this.resultArray=s,e}avg(t){if(!(this.resultArray instanceof Array))return this.resultArray;let r=[];if(1==this.resultArray.length)return Object.keys(this.resultArray[0]).map(e=>{let s=0,a={},l=new Sql(this.resultArray[0][e]).sum(t);s=l/this._length,a[e]=s,r.push(a)}),this.resultArray=r,r;let e=0;e=this.sum(t)/this._length;let s={};return s["avg_"+t]=e,this.resultArray=s,e}in(t,...r){r=r.flat();let e=[];this.resultArray.map(s=>{r.includes(s[t])&&e.push(s)}),this.resultArray=e}notIn(t,...r){r=r.flat();let e=[];this.resultArray.forEach(s=>{r.includes(s[t])||e.push(s)}),this.resultArray=e}}let sql_test=new Sql(inventory);sql_test.select(),sql_test.orderBy("quantity","ASC"),sql_test.limit(1),sql_test.in("quantity"),console.log(sql_test),console.log("--------------");